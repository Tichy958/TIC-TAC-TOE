@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap");

:root {
  /*The :root selector in CSS targets the highest level of the document (typically the <html> element). 
  It's commonly used to define custom properties (variables) that can be accessed throughout the document. 
  These custom properties are prefixed with --, like --dark-gray, --gray, etc.*/
  --dark-gray: #1a2a32;
  --gray: #2e4756;
  --turquoise: #3cc4bf;
  --yellow: #f2b147;
  --light-gray: #d3d3d3;
}

* {
  padding: 0;
  margin: 0;
  border: none;
  box-sizing: border-box;
  list-style: none;
  font-family: "Montserrat", sans-serif; /* tenhle font zatím není */
}

html,
body {
  height: 100%; /* vh ujdane necha nejaky padding na spodu */
  background-color: var(--dark-gray);
}

body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, 80px);
  grid-template-rows: 50px repeat(3, 80px) 60px;
  gap: 5px;
}

/* Menu styles  */

.square {
  background-color: #f2b147;
}

.score {
  background-color: red;
}

.actions {
  background-color: aliceblue;
}

/* Footer styles */

footer {
  color: white;
  margin-top: 50px;
}

footer p {
  margin-top: 10px;
  text-align: center;
}

footer a {
  color: var(--yellow);
}

@media (min-width: 768px) {
  .grid {
    width: 490px;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: 50px repeat(3, 150px) 60px;
    gap: 20px;
  }
}

.turn {
  grid-column-start: 1;
  grid-column-end: 3;
  align-self: center;

  display: flex;
  align-items: center;
  gap: 20px;

  color: var(--yellow);
}
.turn p {
  font-size: 14px;
  animation: 0.6s ease-in-out turn-text-animation;
}

.turn i {
  font-size: 1.8rem;
  margin-left: 10px;
  animation: 0.6s ease-in-out turn-icon-animation;
}
@keyframes turn-text-animation {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 100%;
    transform: translateX(0);
  }
}
@keyframes turn-icon-animation {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.4);
  }
  100% {
    transform: scale(1);
  }
}
/*In CSS, keyframes is a rule used to create animations. 
It defines the behavior of an element at specific points during an animation sequence. */
